day01:
1.mysql -uroot -p1234;
2.show databases;
3.create database db1;
4.show create database db1;
5.create database db2 character set gbk;
6.drop database db2;

7.use db1;
8.create table 表名(字段1 字段1类型,字段2 字段2类型);
9.show tables;
10.show create table person;
11.create table 表名(字段1 字段1类型,字段2 字段2类型) engine=innodb/myisam charset=gbk/utf8;
12.drop table person
13.desc person;
14.rename table 原名 to 新名;

15.alter table 表名 engine=myisam/innodb charset=gbk/utf8;
16.alter table 表名 add 字段名 类型 (first/after xxx)
17.alter table person drop english;
18.alter table person change 原字段名 新名(新类型)
19.alter table person modify 字段名 类型 first/after xxx
20.insert into 表名 values(值1，值2...)
21.insert into 表名 values("刘备",20),("关羽",19),("张飞",30)
22.insert into 表名(字段1名，字段2名) values(值1值2)
23.insert into 表名(字段1,字段2)values("悟空"),("八戒"),("沙僧")
24.set names gbk;

25.select*from hero;
26.select name from hero;
27.select name,age from hero;
28.select*from hero where age<20;
29.select*from hero where name="关羽";

30.delete from 表名 where age=10;
31.update 表名 set age=40 where name="八戒";
32.create table 表名(字段1 字段1类型 primary key auto_increment comment "这是主键",字段2 字段2类型);
33.show variables like"%autocommit%";
34.set autocommit=0;
35.commit;
36.rollback;
37.savepoint 标识s1;
38.rollback to s1;
39.truncate table 表名;
40.create table t_int(num int(10) zerofill);
41.select empno,ename from emp where mgr is null;
42.select empno,ename from emp where mgr is not null;
43.select ename as"姓名",sal as"工资" from emp; 
   select ename 姓名,sal 工资 from emp;
44.select distinct job from emp;
45.select *from emp where deptno=10 and sal>3000;
46.select ename,job,mgr,deptno from emp where deptno=30 or mgr=7698;
47.select*from emp where sal in(5000,1500,3000);
48.select*from emp where sal between 2000 and 4000;
49.select*from emp where sal not between 2100 and 2800;
50.select*from emp where ename like '_a%b';
51.select*from t_item where title not like "%得力%";
52.select name,sal from emp order by sal;
53.select*from emp limit 3,3;
54.select ename 姓名,sal 工资,sal*5 年终奖 from emp;
55.update emp set comm=ifnull(comm,0);
56.select sum(sal)from emp;
57.select avg(sal)from emp where deptno=10;
58.select max(sal)from emp where deptno=30;
59.select min(price)from t_item where title like "dell";
60.select count(*) from emp where sal>=3000;
61.select now();
62.select curdate();
63.select curtime();
64.select date(now());
65.select time(now());
66.select extract(year/month/day/hour/minute/second from now());
67.select date_format(now(),"%Y年%m月%d日%H时%i分%s秒");
68.select str_to_date("14.08.2018 08:00:00","%d.%m.%Y %H:%i:%s");
69.select concat("aaa","bbb");
70.select char_length("abc");
71.select instr("abcdefg","d");
72.select locate("d","abcdefg");
73.select insert("abcdefg",3,2,"m");
74.select upper("abc");
75.select lower("NBA");
76.select trim(" a b ");
77.select left("abcdefg",2);
78.select right("abcdefg",2);
79.select substring("abcdefg",2);
80.select repeat("abcdefg",2);
81.select replace("abcdefg","de","mm");
82.select reverse("abcdefg");
83.select floor(3.84);
84.select round(23.8,2);
85.select truncate(23.879,2);
86.select rand();
87.select count(*) from emp group by deptno;
88.select category_id,avg(price) a from t_item
group by category_id
having a<100;
89.create table emp_20 as(子查询);
90.select e.ename,d.dname
from emp e,dept d
where e.deptno=d.deptno
91.select e.ename,d.dname
from emp e,dept d
92.select e.ename,d.dname
from emp e join dept d
on e.deptno=d.deptno;
93.select e.ename,d.dname
from emp e left/right join dept d
on e.deptno=d.deptno;
94.create view 视图名 as (子查询)
95.create view v_emp_20 as(select*from emp where deptno=20)with check option;
96.create or replace view v_emp_20 as(select*from emp where deptno=20 and sal>2000);
97.create table t1(id int,age int not null);
98.create table t2(id int,age int unique);
99.create table t3(id int,age int default 20);
100.create table emp(id int primary key auto_increment,name varchar(10),deptid int,constraint fk_dept foreign key(deptid) references dept(id));
constraint 约束名称 foreign key(外键字段名) references 表名（字段名）
101.create index index_item_title on item2(title);
create index 索引名 on 表名 (字段(字符长度可不写));
102.show index from item2;
103.drop index index_item_title on item2;
104.create index index_item_title_price on item2(title,price)
create index 索引名 on 表名(字段1,字段2);
105.select deptno,group_concat(ename,"-",floor(sal)) from emp group by deptno;

int(m) bigint(m) zerofill(常填充);
double(m,d),decimal(m,d);
char(n) varchar(n) text;
date(年月日) time(时分秒) 
datetime(年月日时分秒 null 最大值9999-12-31) 
timestamp(年月日时分秒 当前时间 最大值2038-1-19)
5%3等效mod(5,3)
%Y四位年 %y两位年
%m两位月 %c一位月
%d号
%H 24小时 %h12小时
%i 分
%s 秒
DDL
DML
DQL
TCL
DCL
顺序 where...group by...having...order by...limit...
子查询可以放在 where having后当一个值使用，也可以放from后面当一张新表使用（此时必须有别名），写在创建表的时候
等值连接：select*from A,B where A.x=B.x and A.age=18;
内连接：select*from A join B on A.x=B.x;
事务的ACID特性：
Atomicity：原子性，最小不可拆分，全部成功或全部失败
Consistency：一致性，从一个一致转态到另外一个一致状态
Isolation：隔离性，多个事务之间互不影响
Durability：持久性，事务完成后数据提交到数据库持久保存


1.连接数据库*
2.显示所有的数据库*
3.创造一个数据库db1*
4.显示数据库db1的内容*
5.创造一个数据库db2并指定字符集为gbk*
6.删除数据库db2*

7.选定数据库db1*
8.在数据库db1中创造一个表格person*
9.显示所有的表格*
10.显示表格person的内容*
11.创造表格t1并指定引擎和字符集*
12.删除表格*
13.查看表结构*
14.修改表格名字*

15.修改表格的引擎和字符集*
16.增加表格字段*
17.删除名为english的字段*
18.修改字段名*
19.修改字段位置和类型*

20.插入表格内容（全表插入）*
21.插入表格内容（全局插入多个）*
22.插入表格内容（指定字段）*
23.插入表格内容（指定多个字段）*
(24.修改字符集)

25.查询表格全部内容*
26.查询表格所有的名字*
27.查询表格所有的名字.年龄*
28.查询表格中所有年龄小于20的内容*
29.查询表格中名字等于关羽的内容*
30.删除表格内容
31.修改表格内容
32.创造表格并指定主键，主键自增，对每个字段添加注释
(33.查看是否自动提交)
34.关闭自动提交
35.手动提交
36.事务回滚上次提交的点
37.添加标识s1
38.回滚到s1
39.删除表格并创造新表格
40.创造表格时指定int值长度
41.查询mgr为空的员工部门，名字
42.查询mgr不为空的员工部门，姓名
43.查询员工姓名工资时添加别名
44.查询职位时去重
45.and	
46.or	
47.in	
48.between
49.not between
50.like _%
51.not like _%
52.order by(desc)
53.limit
54.加减乘除
55.ifnull(x,y);如果x为null则赋值y，不为null则赋值x
56.sum(sal)求和
57.avg(sal)求平均
58.max(sal)求最大值
59.min(sal)求最小值
60.count(*/sal)统计数量
61.now();获取当前时间年月日时分秒
62.curdate();获取当前年月日
63.curtime();获取当前时分秒
64.date(now());
65.time(now());
66.extract(year from now());
67.date_format(日期,format);
68.str_to_date(非标准时间,format);
69.字符串的拼接
70.查询字符串的长度
71.获取一个字符串在另一个字符串中出现的位置
72.获取一个字符串在另一个字符串中出现的位置(反)
73.在字符串中插入字符串
74.转大写
75.转小写
76.去空白
77.从左边截取
78.从右边截取
79.从中间截取
80.重复
81.代替
82.反转字符串
83.向下取整
84.四舍五入
85.非四舍五入，直接保留小数位数
86.产生随机数
87.分组
88.聚合函数条件
89.子查询创建新表
90.等值连接
91.笛卡尔积
92.内连接
93.外链接
94.创建视图
95.创建视图并避免数据污染
96.修改视图（创造或代替）
97.字段不能为空
98.字段不能重复
99.设定默认值
100.外键约束（一般不适用）
101.创建索引
102.查看索引
103.删除索引
104.创建多字段索引
105.显示到一行



第一次：
39.删除表格并创造新表格
40.创造表格时指定int值长度
44.查询职位时去重
55.如果x为null则赋值y，不为null则赋值x
62.获取当前年月日
63.获取当前时分秒
66.提取单独的年
68.非标准日期转化为标准日期
70.查询字符串的长度
71.获取一个字符串在另一个字符串中出现的位置
72.获取一个字符串在另一个字符串中出现的位置(反)
73.在字符串中插入字符串
79.从中间截取
82.反转字符串
83.向下取整
84.四舍五入
85.非四舍五入，直接保留小数位数
86.产生随机数
89.子查询创建新表
90.等值连接
94.创建视图
95.创建视图并避免数据污染
97.字段不能为空
98.字段不能重复
99.设定默认值
98.字段不能重复
101.创建索引
102.查看索引
103.删除索引
105.显示到一行

第二次：
44.查询职位时去重
62.获取当前年月日
83.向下取整
95.创建视图并避免数据污染
98.字段不能重复
102.查看索引
103.删除索引

第三次：
83.向下取整
95.创建视图并避免数据污染
102.查看索引
103.删除索引